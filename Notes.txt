
//create new angular application 
ng new myapp

//create new angular application with custom prefix
ng new myapp --prefix nitish

//build angular application
ng build

//run angular application
ng serve 
or
ng serve -o
or
npm start
//create any javascript application we have to create package.json
npm init
//install all node modules
npm install

//create component
ng generate component home

//create component without spec file
ng g c login --skip-tests=true

//create component inside subfolder
ng g c login/logout
or 
ng g c login/logout/comp1

//create component without creating folder
ng g c signup --flat 

//create component with custom prefix
ng g c comp2 --prefix nitish
or
ng g c comp3 --prefix=custom

// create module 
ng generate module public

// add component name home inside public/components
ng generate component public/components/home
ng generate component auth/components/login

//if a folder contain mutiple module then we can explicitly define the module name
ng generate component auth/components/login --module=auth


//create a module with a routing module and also add reference the user module to its parent module
ng g m user --routing --module=app

//create a service
ng g s book


Note: if application is using eager loading there is difference between service type 
any and root. only single instance every time
but in lazy loading serice type any will create separate instance 


------------------------------------------------------------------------------------------
life cycle of angular application

1* constructor --> used to inject any services and assigning value to properties 
2* ngOnChange --> when we pass data from parent to chaild component using @input. 
  And when there is a change in the data ngOnChange get fired
3* ngOnInit --> It's get called when after ngOnChange and before the displayed on the view or before view initialization
4.*ngAfterViewInit --> its get called after view initialization. we can manipulate html in this event.
5.*ngAfterViewChecked --> any change to child component can be tracked over here


* ngDoCheck --> ngDoCheck is used to detect whether any object property has changed instead of entire object reference 
  example = {id: 123, name : 'Prasun'}
  example.id = 124 // onchange cant detect but docheck will detect    

*ngAfterContentInit & ngAfterContentChecked -- to pass the data to child and display and track the changes                

